(function (root) {/*global exports, Intl*/
/**
 * This script gives you the zone info key representing your device's time zone setting.
 *
 * @name jsTimezoneDetect
 * @version 1.0.6
 * @author Jon Nylander
 * @license MIT License - https://bitbucket.org/pellepim/jstimezonedetect/src/default/LICENCE.txt
 *
 * For usage and examples, visit:
 * http://pellepim.bitbucket.org/jstz/
 *
 * Copyright (c) Jon Nylander
 */


/**
 * Namespace to hold all the code for timezone detection.
 */
var jstz = (function () {
	'use strict';
	var HEMISPHERE_SOUTH = 's',

		consts = {
			DAY: 86400000,
			HOUR: 3600000,
			MINUTE: 60000,
			SECOND: 1000,
			BASELINE_YEAR: 2014,
			MAX_SCORE: 864000000, // 10 days
			AMBIGUITIES: {
				'America/Denver':       ['America/Mazatlan'],
				'America/Chicago':      ['America/Mexico_City'],
				'America/Asuncion':     ['America/Campo_Grande', 'America/Santiago'],
				'America/Montevideo':   ['America/Sao_Paulo', 'America/Santiago'],
				'Asia/Beirut':          ['Asia/Amman', 'Asia/Jerusalem', 'Europe/Helsinki', 'Asia/Damascus', 'Africa/Cairo', 'Asia/Gaza', 'Europe/Minsk', 'Africa/Windhoek'],
				'Pacific/Auckland':     ['Pacific/Fiji'],
				'America/Los_Angeles':  ['America/Santa_Isabel'],
				'America/New_York':     ['America/Havana'],
				'America/Halifax':      ['America/Goose_Bay'],
				'America/Godthab':      ['America/Miquelon'],
				'Asia/Dubai':           ['Asia/Yerevan'],
				'Asia/Jakarta':         ['Asia/Krasnoyarsk'],
				'Asia/Shanghai':        ['Asia/Irkutsk', 'Australia/Perth'],
				'Australia/Sydney':     ['Australia/Lord_Howe'],
				'Asia/Tokyo':           ['Asia/Yakutsk'],
				'Asia/Dhaka':           ['Asia/Omsk'],
				'Asia/Baku':            ['Asia/Yerevan'],
				'Australia/Brisbane':   ['Asia/Vladivostok'],
				'Pacific/Noumea':       ['Asia/Vladivostok'],
				'Pacific/Majuro':       ['Asia/Kamchatka', 'Pacific/Fiji'],
				'Pacific/Tongatapu':    ['Pacific/Apia'],
				'Asia/Baghdad':         ['Europe/Minsk', 'Europe/Moscow'],
				'Asia/Karachi':         ['Asia/Yekaterinburg'],
				'Africa/Johannesburg':  ['Asia/Gaza', 'Africa/Cairo']
			}
		},

		/**
		 * Gets the offset in minutes from UTC for a certain date.
		 * @param {Date} date
		 * @returns {Number}
		 */
		get_date_offset = function get_date_offset(date) {
			var offset = -date.getTimezoneOffset();
			return (offset !== null ? offset : 0);
		},


		get_offsets = function get_offsets() {
			var offsets = [];

			for (var month = 0; month <= 11; month++) {
				for (var date = 1; date <= 28; date++) {
					var currentOffset = get_date_offset(new Date(consts.BASELINE_YEAR, month, date));
					if (!offsets) {
						offsets.push();
					} else if (offsets && offsets[offsets.length-1] !== currentOffset) {
						offsets.push(currentOffset);
					}
				}
			}

			return offsets;
		},

		/**
		 * This function does some basic calculations to create information about
		 * the user's timezone. It uses REFERENCE_YEAR as a solid year for which
		 * the script has been tested rather than depend on the year set by the
		 * client device.
		 *
		 * Returns a key that can be used to do lookups in jstz.olson.timezones.
		 * eg: "720,1,2".
		 *
		 * @returns {String}
		 */
		lookup_key = function lookup_key() {
			var diff = 0;
			var offsets = get_offsets();

			if (offsets.length > 1) {
				diff = offsets[0] - offsets[1];
			}

			if (offsets.length > 3) {
				return offsets[0] + ",1,weird";
			} else if (diff < 0) {
				return offsets[0] + ",1";
			} else if (diff > 0) {
				return offsets[1] + ",1," + HEMISPHERE_SOUTH;
			}

			return offsets[0] + ",0";
		},


		/**
		 * Tries to get the time zone key directly from the operating system for those
		 * environments that support the ECMAScript Internationalization API.
		 */
		get_from_internationalization_api = function get_from_internationalization_api() {
			var format, timezone;
			if (!Intl || typeof Intl === "undefined" || typeof Intl.DateTimeFormat === "undefined") {
				return;
			}

			format = Intl.DateTimeFormat();

			if (typeof format === "undefined" || typeof format.resolvedOptions === "undefined") {
				return;
			}

			timezone = format.resolvedOptions().timeZone;

			if (timezone && (timezone.indexOf("/") > -1 || timezone === 'UTC')) {
				return timezone;
			}

		},

		/**
		 * Starting point for getting all the DST rules for a specific year
		 * for the current timezone (as described by the client system).
		 *
		 * Returns an object with start and end attributes, or false if no
		 * DST rules were found for the year.
		 *
		 * @param year
		 * @returns {Object} || {Boolean}
		 */
		dst_dates = function dst_dates(year) {
			var yearstart = new Date(year, 0, 1, 0, 0, 1, 0).getTime();
			var yearend = new Date(year, 12, 31, 23, 59, 59).getTime();
			var current = yearstart;
			var offset = (new Date(current)).getTimezoneOffset();
			var dst_start = null;
			var dst_end = null;

			while (current < yearend - 86400000) {
				var dateToCheck = new Date(current);
				var dateToCheckOffset = dateToCheck.getTimezoneOffset();

				if (dateToCheckOffset !== offset) {
					if (dateToCheckOffset < offset) {
						dst_start = dateToCheck;
					}
					if (dateToCheckOffset > offset) {
						dst_end = dateToCheck;
					}
					offset = dateToCheckOffset;
				}

				current += 86400000;
			}

			if (dst_start && dst_end) {
				return {
					s: find_dst_fold(dst_start).getTime(),
					e: find_dst_fold(dst_end).getTime()
				};
			}

			return false;
		},

		/**
		 * Probably completely unnecessary function that recursively finds the
		 * exact (to the second) time when a DST rule was changed.
		 *
		 * @param a_date - The candidate Date.
		 * @param padding - integer specifying the padding to allow around the candidate
		 *                  date for finding the fold.
		 * @param iterator - integer specifying how many milliseconds to iterate while
		 *                   searching for the fold.
		 *
		 * @returns {Date}
		 */
		find_dst_fold = function find_dst_fold(a_date, padding, iterator) {
			if (typeof padding === 'undefined') {
				padding = consts.DAY;
				iterator = consts.HOUR;
			}

			var date_start = new Date(a_date.getTime() - padding).getTime();
			var date_end = a_date.getTime() + padding;
			var offset = new Date(date_start).getTimezoneOffset();

			var current = date_start;

			var dst_change = null;
			while (current < date_end - iterator) {
				var dateToCheck = new Date(current);
				var dateToCheckOffset = dateToCheck.getTimezoneOffset();

				if (dateToCheckOffset !== offset) {
					dst_change = dateToCheck;
					break;
				}
				current += iterator;
			}

			if (padding === consts.DAY) {
				return find_dst_fold(dst_change, consts.HOUR, consts.MINUTE);
			}

			if (padding === consts.HOUR) {
				return find_dst_fold(dst_change, consts.MINUTE, consts.SECOND);
			}

			return dst_change;
		},

		windows7_adaptations = function windows7_adaptions(rule_list, preliminary_timezone, score, sample) {
			if (score !== 'N/A') {
				return score;
			}
			if (preliminary_timezone === 'Asia/Beirut') {
				if (sample.name === 'Africa/Cairo') {
					if (rule_list[6].s === 1398376800000 && rule_list[6].e === 1411678800000) {
						return 0;
					}
				}
				if (sample.name === 'Asia/Jerusalem') {
					if (rule_list[6].s === 1395964800000 && rule_list[6].e === 1411858800000) {
						return 0;
				}
			}
			} else if (preliminary_timezone === 'America/Santiago') {
				if (sample.name === 'America/Asuncion') {
					if (rule_list[6].s === 1412481600000 && rule_list[6].e === 1397358000000) {
						return 0;
					}
				}
				if (sample.name === 'America/Campo_Grande') {
					if (rule_list[6].s === 1413691200000 && rule_list[6].e === 1392519600000) {
						return 0;
					}
				}
			} else if (preliminary_timezone === 'America/Montevideo') {
				if (sample.name === 'America/Sao_Paulo') {
					if (rule_list[6].s === 1413687600000 && rule_list[6].e === 1392516000000) {
						return 0;
					}
				}
			} else if (preliminary_timezone === 'Pacific/Auckland') {
				if (sample.name === 'Pacific/Fiji') {
					if (rule_list[6].s === 1414245600000 && rule_list[6].e === 1396101600000) {
						return 0;
					}
				}
			}

			return score;
		},

		/**
		 * Takes the DST rules for the current timezone, and proceeds to find matches
		 * in the jstz.olson.dst_rules.zones array.
		 *
		 * Compares samples to the current timezone on a scoring basis.
		 *
		 * Candidates are ruled immediately if either the candidate or the current zone
		 * has a DST rule where the other does not.
		 *
		 * Candidates are ruled out immediately if the current zone has a rule that is
		 * outside the DST scope of the candidate.
		 *
		 * Candidates are included for scoring if the current zones rules fall within the
		 * span of the samples rules.
		 *
		 * Low score is best, the score is calculated by summing up the differences in DST
		 * rules and if the consts.MAX_SCORE is overreached the candidate is ruled out.
		 *
		 * Yah follow? :)
		 *
		 * @param rule_list
		 * @param preliminary_timezone
		 * @returns {*}
		 */
		best_dst_match = function best_dst_match(rule_list, preliminary_timezone) {
			var score_sample = function score_sample(sample) {
				var score = 0;

				for (var j = 0; j < rule_list.length; j++) {

					// Both sample and current time zone report DST during the year.
					if (!!sample.rules[j] && !!rule_list[j]) {

						// The current time zone's DST rules are inside the sample's. Include.
						if (rule_list[j].s >= sample.rules[j].s && rule_list[j].e <= sample.rules[j].e) {
							score = 0;
							score += Math.abs(rule_list[j].s - sample.rules[j].s);
							score += Math.abs(sample.rules[j].e - rule_list[j].e);

						// The current time zone's DST rules are outside the sample's. Discard.
						} else {
							score = 'N/A';
							break;
						}

						// The max score has been reached. Discard.
						if (score > consts.MAX_SCORE) {
							score = 'N/A';
							break;
						}
					}
				}

				score = windows7_adaptations(rule_list, preliminary_timezone, score, sample);

				return score;
			};
			var scoreboard = {};
			var dst_zones = jstz.olson.dst_rules.zones;
			var dst_zones_length = dst_zones.length;
			var ambiguities = consts.AMBIGUITIES[preliminary_timezone];

			for (var i = 0; i < dst_zones_length; i++) {
				var sample = dst_zones[i];
				var score = score_sample(dst_zones[i]);

				if (score !== 'N/A') {
					scoreboard[sample.name] = score;
				}
			}

			for (var tz in scoreboard) {
				if (scoreboard.hasOwnProperty(tz)) {
					for (var j = 0; j < ambiguities.length; j++) {
						if (ambiguities[j] === tz) {
							return tz;
						}
					}
				}
			}

			return preliminary_timezone;
		},

		/**
		 * Takes the preliminary_timezone as detected by lookup_key().
		 *
		 * Builds up the current timezones DST rules for the years defined
		 * in the jstz.olson.dst_rules.years array.
		 *
		 * If there are no DST occurences for those years, immediately returns
		 * the preliminary timezone. Otherwise proceeds and tries to solve
		 * ambiguities.
		 *
		 * @param preliminary_timezone
		 * @returns {String} timezone_name
		 */
		get_by_dst = function get_by_dst(preliminary_timezone) {
			var get_rules = function get_rules() {
				var rule_list = [];
				for (var i = 0; i < jstz.olson.dst_rules.years.length; i++) {
					var year_rules = dst_dates(jstz.olson.dst_rules.years[i]);
					rule_list.push(year_rules);
				}
				return rule_list;
			};
			var check_has_dst = function check_has_dst(rules) {
				for (var i = 0; i < rules.length; i++) {
					if (rules[i] !== false) {
						return true;
					}
				}
				return false;
			};
			var rules = get_rules();
			var has_dst = check_has_dst(rules);

			if (has_dst) {
				return best_dst_match(rules, preliminary_timezone);
			}

			return preliminary_timezone;
		},

		/**
		 * Uses get_timezone_info() to formulate a key to use in the olson.timezones dictionary.
		 *
		 * Returns an object with one function ".name()"
		 *
		 * @returns Object
		 */
		determine = function determine(using_intl) {
			var preliminary_tz = false;
			var needle = lookup_key();
			if (using_intl || typeof using_intl === 'undefined') {
				preliminary_tz = get_from_internationalization_api();
			}

			if (!preliminary_tz) {
				preliminary_tz = jstz.olson.timezones[needle];

				if (typeof consts.AMBIGUITIES[preliminary_tz] !== 'undefined') {
					preliminary_tz = get_by_dst(preliminary_tz);
				}
			}

			return {
				name: function () {
					return preliminary_tz;
				},
				using_intl: using_intl || typeof using_intl === 'undefined',
				needle: needle,
				offsets: get_offsets()
			};
		};

	return {
		determine: determine
	};
}());


jstz.olson = jstz.olson || {};

/**
 * The keys in this dictionary are comma separated as such:
 *
 * First the offset compared to UTC time in minutes.
 *
 * Then a flag which is 0 if the timezone does not take daylight savings into account and 1 if it
 * does.
 *
 * Thirdly an optional 's' signifies that the timezone is in the southern hemisphere,
 * only interesting for timezones with DST.
 *
 * The mapped arrays is used for constructing the jstz.TimeZone object from within
 * jstz.determine();
 */
jstz.olson.timezones = {
	'-720,0': 'Etc/GMT+12',
	'-660,0': 'Pacific/Pago_Pago',
	'-660,1,s': 'Pacific/Apia', // Why? Because windows... cry!
	'-600,1': 'America/Adak',
	'-600,0': 'Pacific/Honolulu',
	'-570,0': 'Pacific/Marquesas',
	'-540,0': 'Pacific/Gambier',
	'-540,1': 'America/Anchorage',
	'-480,1': 'America/Los_Angeles',
	'-480,0': 'Pacific/Pitcairn',
	'-420,0': 'America/Phoenix',
	'-420,1': 'America/Denver',
	'-360,0': 'America/Guatemala',
	'-360,1': 'America/Chicago',
	'-360,1,s': 'Pacific/Easter',
	'-300,0': 'America/Bogota',
	'-300,1': 'America/New_York',
	'-270,0': 'America/Caracas',
	'-240,1': 'America/Halifax',
	'-240,0': 'America/Santo_Domingo',
	'-240,1,s': 'America/Asuncion',
	'-210,1': 'America/St_Johns',
	'-180,1': 'America/Godthab',
	'-180,0': 'America/Buenos_Aires',
	'-180,1,s': 'America/Montevideo',
	'-120,0': 'America/Noronha',
	'-120,1': 'America/Noronha',
	'-60,1': 'Atlantic/Azores',
	'-60,0': 'Atlantic/Cape_Verde',
	'0,0': 'UTC',
	'0,1': 'Europe/London',
	'0,1,weird': 'Africa/Casablanca',
	'60,1': 'Europe/Berlin',
	'60,0': 'Africa/Lagos',
	'60,1,weird': 'Africa/Casablanca',
	'120,1': 'Asia/Beirut',
	'120,1,weird': 'Africa/Cairo',
	'120,0': 'Africa/Johannesburg',
	'180,0': 'Asia/Baghdad',
	'180,1': 'Europe/Moscow',
	'210,1': 'Asia/Tehran',
	'240,0': 'Asia/Dubai',
	'240,1': 'Asia/Baku',
	'270,0': 'Asia/Kabul',
	'300,1': 'Asia/Yekaterinburg',
	'300,0': 'Asia/Karachi',
	'330,0': 'Asia/Calcutta',
	'345,0': 'Asia/Katmandu',
	'360,0': 'Asia/Dhaka',
	'360,1': 'Asia/Omsk',
	'390,0': 'Asia/Rangoon',
	'420,1': 'Asia/Krasnoyarsk',
	'420,0': 'Asia/Jakarta',
	'480,0': 'Asia/Shanghai',
	'480,1': 'Asia/Irkutsk',
	'525,0': 'Australia/Eucla',
	'525,1,s': 'Australia/Eucla',
	'540,1': 'Asia/Yakutsk',
	'540,0': 'Asia/Tokyo',
	'570,0': 'Australia/Darwin',
	'570,1,s': 'Australia/Adelaide',
	'600,0': 'Australia/Brisbane',
	'600,1': 'Asia/Vladivostok',
	'600,1,s': 'Australia/Sydney',
	'630,1,s': 'Australia/Lord_Howe',
	'660,1': 'Asia/Kamchatka',
	'660,0': 'Pacific/Noumea',
	'690,0': 'Pacific/Norfolk',
	'720,1,s': 'Pacific/Auckland',
	'720,0': 'Pacific/Majuro',
	'765,1,s': 'Pacific/Chatham',
	'780,0': 'Pacific/Tongatapu',
	'780,1,s': 'Pacific/Apia',
	'840,0': 'Pacific/Kiritimati'
};

// CMS7 - friendly names for display.
jstz.olson.friendly = {
	'Africa/Abidjan': 'Greenwich Standard Time',
	'Africa/Accra': 'Greenwich Standard Time',
	'Africa/Addis_Ababa': 'E. Africa Standard Time',
	'Africa/Algiers': 'W. Central Africa Standard Time',
	'Africa/Asmara': 'E. Africa Standard Time',
	'Africa/Asmera': 'E. Africa Standard Time',
	'Africa/Bamako': 'Greenwich Standard Time',
	'Africa/Bangui': 'W. Central Africa Standard Time',
	'Africa/Banjul': 'Greenwich Standard Time',
	'Africa/Bissau': 'Greenwich Standard Time',
	'Africa/Blantyre': 'South Africa Standard Time',
	'Africa/Brazzaville': 'W. Central Africa Standard Time',
	'Africa/Bujumbura': 'South Africa Standard Time',
	'Africa/Cairo': 'Egypt Standard Time',
	'Africa/Casablanca': 'Morocco Standard Time',
	'Africa/Ceuta': 'Romance Standard Time',
	'Africa/Conakry': 'Greenwich Standard Time',
	'Africa/Dakar': 'Greenwich Standard Time',
	'Africa/Dar_es_Salaam': 'E. Africa Standard Time',
	'Africa/Djibouti': 'E. Africa Standard Time',
	'Africa/Douala': 'W. Central Africa Standard Time',
	'Africa/El_Aaiun': 'Morocco Standard Time',
	'Africa/Freetown': 'Greenwich Standard Time',
	'Africa/Gaborone': 'South Africa Standard Time',
	'Africa/Harare': 'South Africa Standard Time',
	'Africa/Johannesburg': 'South Africa Standard Time',
	'Africa/Juba': 'South Sudan Standard Time',
	'Africa/Kampala': 'E. Africa Standard Time',
	'Africa/Khartoum': 'Sudan Standard Time',
	'Africa/Kigali': 'South Africa Standard Time',
	'Africa/Kinshasa': 'W. Central Africa Standard Time',
	'Africa/Lagos': 'W. Central Africa Standard Time',
	'Africa/Libreville': 'W. Central Africa Standard Time',
	'Africa/Lome': 'Greenwich Standard Time',
	'Africa/Luanda': 'W. Central Africa Standard Time',
	'Africa/Lubumbashi': 'South Africa Standard Time',
	'Africa/Lusaka': 'South Africa Standard Time',
	'Africa/Malabo': 'W. Central Africa Standard Time',
	'Africa/Maputo': 'South Africa Standard Time',
	'Africa/Maseru': 'South Africa Standard Time',
	'Africa/Mbabane': 'South Africa Standard Time',
	'Africa/Mogadishu': 'E. Africa Standard Time',
	'Africa/Monrovia': 'Greenwich Standard Time',
	'Africa/Nairobi': 'E. Africa Standard Time',
	'Africa/Ndjamena': 'W. Central Africa Standard Time',
	'Africa/Niamey': 'W. Central Africa Standard Time',
	'Africa/Nouakchott': 'Greenwich Standard Time',
	'Africa/Ouagadougou': 'Greenwich Standard Time',
	'Africa/Porto-Novo': 'W. Central Africa Standard Time',
	'Africa/Sao_Tome': 'Sao Tome Standard Time',
	'Africa/Timbuktu': 'Greenwich Standard Time',
	'Africa/Tripoli': 'Libya Standard Time',
	'Africa/Tunis': 'W. Central Africa Standard Time',
	'Africa/Windhoek': 'Namibia Standard Time',
	'America/Adak': 'Aleutian Standard Time',
	'America/Anchorage': 'Alaskan Standard Time',
	'America/Anguilla': 'SA Western Standard Time',
	'America/Antigua': 'SA Western Standard Time',
	'America/Araguaina': 'Tocantins Standard Time',
	'America/Argentina/Buenos_Aires': 'Argentina Standard Time',
	'America/Argentina/Catamarca': 'Argentina Standard Time',
	'America/Argentina/ComodRivadavia': 'Argentina Standard Time',
	'America/Argentina/Cordoba': 'Argentina Standard Time',
	'America/Argentina/Jujuy': 'Argentina Standard Time',
	'America/Argentina/La_Rioja': 'Argentina Standard Time',
	'America/Argentina/Mendoza': 'Argentina Standard Time',
	'America/Argentina/Rio_Gallegos': 'Argentina Standard Time',
	'America/Argentina/Salta': 'Argentina Standard Time',
	'America/Argentina/San_Juan': 'Argentina Standard Time',
	'America/Argentina/San_Luis': 'Argentina Standard Time',
	'America/Argentina/Tucuman': 'Argentina Standard Time',
	'America/Argentina/Ushuaia': 'Argentina Standard Time',
	'America/Aruba': 'SA Western Standard Time',
	'America/Asuncion': 'Paraguay Standard Time',
	'America/Atikokan': 'SA Pacific Standard Time',
	'America/Atka': 'Aleutian Standard Time',
	'America/Bahia': 'Bahia Standard Time',
	'America/Bahia_Banderas': 'Central Standard Time (Mexico)',
	'America/Barbados': 'SA Western Standard Time',
	'America/Belem': 'SA Eastern Standard Time',
	'America/Belize': 'Central America Standard Time',
	'America/Blanc-Sablon': 'SA Western Standard Time',
	'America/Boa_Vista': 'SA Western Standard Time',
	'America/Bogota': 'SA Pacific Standard Time',
	'America/Boise': 'Mountain Standard Time',
	'America/Buenos_Aires': 'Argentina Standard Time',
	'America/Cambridge_Bay': 'Mountain Standard Time',
	'America/Campo_Grande': 'Central Brazilian Standard Time',
	'America/Cancun': 'Eastern Standard Time (Mexico)',
	'America/Caracas': 'Venezuela Standard Time',
	'America/Catamarca': 'Argentina Standard Time',
	'America/Cayenne': 'SA Eastern Standard Time',
	'America/Cayman': 'SA Pacific Standard Time',
	'America/Chicago': 'Central Standard Time',
	'America/Chihuahua': 'Mountain Standard Time (Mexico)',
	'America/Coral_Harbour': 'SA Pacific Standard Time',
	'America/Cordoba': 'Argentina Standard Time',
	'America/Costa_Rica': 'Central America Standard Time',
	'America/Creston': 'US Mountain Standard Time',
	'America/Cuiaba': 'Central Brazilian Standard Time',
	'America/Curacao': 'SA Western Standard Time',
	'America/Danmarkshavn': 'Greenwich Standard Time',
	'America/Dawson': 'Yukon Standard Time',
	'America/Dawson_Creek': 'US Mountain Standard Time',
	'America/Denver': 'Mountain Standard Time',
	'America/Detroit': 'Eastern Standard Time',
	'America/Dominica': 'SA Western Standard Time',
	'America/Edmonton': 'Mountain Standard Time',
	'America/Eirunepe': 'SA Pacific Standard Time',
	'America/El_Salvador': 'Central America Standard Time',
	'America/Ensenada': 'Pacific Standard Time (Mexico)',
	'America/Fort_Nelson': 'US Mountain Standard Time',
	'America/Fort_Wayne': 'US Eastern Standard Time',
	'America/Fortaleza': 'SA Eastern Standard Time',
	'America/Glace_Bay': 'Atlantic Standard Time',
	'America/Godthab': 'Greenland Standard Time',
	'America/Goose_Bay': 'Atlantic Standard Time',
	'America/Grand_Turk': 'Turks And Caicos Standard Time',
	'America/Grenada': 'SA Western Standard Time',
	'America/Guadeloupe': 'SA Western Standard Time',
	'America/Guatemala': 'Central America Standard Time',
	'America/Guayaquil': 'SA Pacific Standard Time',
	'America/Guyana': 'SA Western Standard Time',
	'America/Halifax': 'Atlantic Standard Time',
	'America/Havana': 'Cuba Standard Time',
	'America/Hermosillo': 'US Mountain Standard Time',
	'America/Indiana/Indianapolis': 'US Eastern Standard Time',
	'America/Indiana/Knox': 'Central Standard Time',
	'America/Indiana/Marengo': 'US Eastern Standard Time',
	'America/Indiana/Petersburg': 'Eastern Standard Time',
	'America/Indiana/Tell_City': 'Central Standard Time',
	'America/Indiana/Vevay': 'US Eastern Standard Time',
	'America/Indiana/Vincennes': 'Eastern Standard Time',
	'America/Indiana/Winamac': 'Eastern Standard Time',
	'America/Indianapolis': 'US Eastern Standard Time',
	'America/Inuvik': 'Mountain Standard Time',
	'America/Iqaluit': 'Eastern Standard Time',
	'America/Jamaica': 'SA Pacific Standard Time',
	'America/Jujuy': 'Argentina Standard Time',
	'America/Juneau': 'Alaskan Standard Time',
	'America/Kentucky/Louisville': 'Eastern Standard Time',
	'America/Kentucky/Monticello': 'Eastern Standard Time',
	'America/Knox_IN': 'Central Standard Time',
	'America/Kralendijk': 'SA Western Standard Time',
	'America/La_Paz': 'SA Western Standard Time',
	'America/Lima': 'SA Pacific Standard Time',
	'America/Los_Angeles': 'Pacific Standard Time',
	'America/Louisville': 'Eastern Standard Time',
	'America/Lower_Princes': 'SA Western Standard Time',
	'America/Maceio': 'SA Eastern Standard Time',
	'America/Managua': 'Central America Standard Time',
	'America/Manaus': 'SA Western Standard Time',
	'America/Marigot': 'SA Western Standard Time',
	'America/Martinique': 'SA Western Standard Time',
	'America/Matamoros': 'Central Standard Time',
	'America/Mazatlan': 'Mountain Standard Time (Mexico)',
	'America/Mendoza': 'Argentina Standard Time',
	'America/Menominee': 'Central Standard Time',
	'America/Merida': 'Central Standard Time (Mexico)',
	'America/Metlakatla': 'Alaskan Standard Time',
	'America/Mexico_City': 'Central Standard Time (Mexico)',
	'America/Miquelon': 'Saint Pierre Standard Time',
	'America/Moncton': 'Atlantic Standard Time',
	'America/Monterrey': 'Central Standard Time (Mexico)',
	'America/Montevideo': 'Montevideo Standard Time',
	'America/Montreal': 'Eastern Standard Time',
	'America/Montserrat': 'SA Western Standard Time',
	'America/Nassau': 'Eastern Standard Time',
	'America/New_York': 'Eastern Standard Time',
	'America/Nipigon': 'Eastern Standard Time',
	'America/Nome': 'Alaskan Standard Time',
	'America/Noronha': 'UTC-02',
	'America/North_Dakota/Beulah': 'Central Standard Time',
	'America/North_Dakota/Center': 'Central Standard Time',
	'America/North_Dakota/New_Salem': 'Central Standard Time',
	'America/Nuuk': 'Greenland Standard Time',
	'America/Ojinaga': 'Mountain Standard Time',
	'America/Panama': 'SA Pacific Standard Time',
	'America/Pangnirtung': 'Eastern Standard Time',
	'America/Paramaribo': 'SA Eastern Standard Time',
	'America/Phoenix': 'US Mountain Standard Time',
	'America/Port-au-Prince': 'Haiti Standard Time',
	'America/Port_of_Spain': 'SA Western Standard Time',
	'America/Porto_Acre': 'SA Pacific Standard Time',
	'America/Porto_Velho': 'SA Western Standard Time',
	'America/Puerto_Rico': 'SA Western Standard Time',
	'America/Punta_Arenas': 'Magallanes Standard Time',
	'America/Rainy_River': 'Central Standard Time',
	'America/Rankin_Inlet': 'Central Standard Time',
	'America/Recife': 'SA Eastern Standard Time',
	'America/Regina': 'Canada Central Standard Time',
	'America/Resolute': 'Central Standard Time',
	'America/Rio_Branco': 'SA Pacific Standard Time',
	'America/Rosario': 'Argentina Standard Time',
	'America/Santa_Isabel': 'Pacific Standard Time (Mexico)',
	'America/Santarem': 'SA Eastern Standard Time',
	'America/Santiago': 'Pacific SA Standard Time',
	'America/Santo_Domingo': 'SA Western Standard Time',
	'America/Sao_Paulo': 'E. South America Standard Time',
	'America/Scoresbysund': 'Azores Standard Time',
	'America/Shiprock': 'Mountain Standard Time',
	'America/Sitka': 'Alaskan Standard Time',
	'America/St_Barthelemy': 'SA Western Standard Time',
	'America/St_Johns': 'Newfoundland Standard Time',
	'America/St_Kitts': 'SA Western Standard Time',
	'America/St_Lucia': 'SA Western Standard Time',
	'America/St_Thomas': 'SA Western Standard Time',
	'America/St_Vincent': 'SA Western Standard Time',
	'America/Swift_Current': 'Canada Central Standard Time',
	'America/Tegucigalpa': 'Central America Standard Time',
	'America/Thule': 'Atlantic Standard Time',
	'America/Thunder_Bay': 'Eastern Standard Time',
	'America/Tijuana': 'Pacific Standard Time (Mexico)',
	'America/Toronto': 'Eastern Standard Time',
	'America/Tortola': 'SA Western Standard Time',
	'America/Vancouver': 'Pacific Standard Time',
	'America/Virgin': 'SA Western Standard Time',
	'America/Whitehorse': 'Yukon Standard Time',
	'America/Winnipeg': 'Central Standard Time',
	'America/Yakutat': 'Alaskan Standard Time',
	'America/Yellowknife': 'Mountain Standard Time',
	'Antarctica/Casey': 'Central Pacific Standard Time',
	'Antarctica/Davis': 'SE Asia Standard Time',
	'Antarctica/DumontDUrville': 'West Pacific Standard Time',
	'Antarctica/Macquarie': 'Tasmania Standard Time',
	'Antarctica/Mawson': 'West Asia Standard Time',
	'Antarctica/McMurdo': 'New Zealand Standard Time',
	'Antarctica/Palmer': 'SA Eastern Standard Time',
	'Antarctica/Rothera': 'SA Eastern Standard Time',
	'Antarctica/South_Pole': 'New Zealand Standard Time',
	'Antarctica/Syowa': 'E. Africa Standard Time',
	'Antarctica/Vostok': 'Central Asia Standard Time',
	'Arctic/Longyearbyen': 'W. Europe Standard Time',
	'Asia/Aden': 'Arab Standard Time',
	'Asia/Almaty': 'Central Asia Standard Time',
	'Asia/Amman': 'Jordan Standard Time',
	'Asia/Anadyr': 'Russia Time Zone 11',
	'Asia/Aqtau': 'West Asia Standard Time',
	'Asia/Aqtobe': 'West Asia Standard Time',
	'Asia/Ashgabat': 'West Asia Standard Time',
	'Asia/Ashkhabad': 'West Asia Standard Time',
	'Asia/Atyrau': 'West Asia Standard Time',
	'Asia/Baghdad': 'Arabic Standard Time',
	'Asia/Bahrain': 'Arab Standard Time',
	'Asia/Baku': 'Azerbaijan Standard Time',
	'Asia/Bangkok': 'SE Asia Standard Time',
	'Asia/Barnaul': 'Altai Standard Time',
	'Asia/Beirut': 'Middle East Standard Time',
	'Asia/Bishkek': 'Central Asia Standard Time',
	'Asia/Brunei': 'Singapore Standard Time',
	'Asia/Calcutta': 'India Standard Time',
	'Asia/Chita': 'Transbaikal Standard Time',
	'Asia/Choibalsan': 'Ulaanbaatar Standard Time',
	'Asia/Chongqing': 'China Standard Time',
	'Asia/Chungking': 'China Standard Time',
	'Asia/Colombo': 'Sri Lanka Standard Time',
	'Asia/Dacca': 'Bangladesh Standard Time',
	'Asia/Damascus': 'Syria Standard Time',
	'Asia/Dhaka': 'Bangladesh Standard Time',
	'Asia/Dili': 'Tokyo Standard Time',
	'Asia/Dubai': 'Arabian Standard Time',
	'Asia/Dushanbe': 'West Asia Standard Time',
	'Asia/Famagusta': 'GTB Standard Time',
	'Asia/Gaza': 'West Bank Standard Time',
	'Asia/Harbin': 'China Standard Time',
	'Asia/Hebron': 'West Bank Standard Time',
	'Asia/Ho_Chi_Minh': 'SE Asia Standard Time',
	'Asia/Hong_Kong': 'China Standard Time',
	'Asia/Hovd': 'W. Mongolia Standard Time',
	'Asia/Irkutsk': 'North Asia East Standard Time',
	'Asia/Istanbul': 'Turkey Standard Time',
	'Asia/Jakarta': 'SE Asia Standard Time',
	'Asia/Jayapura': 'Tokyo Standard Time',
	'Asia/Jerusalem': 'Israel Standard Time',
	'Asia/Kabul': 'Afghanistan Standard Time',
	'Asia/Kamchatka': 'Russia Time Zone 11',
	'Asia/Karachi': 'Pakistan Standard Time',
	'Asia/Kashgar': 'Central Asia Standard Time',
	'Asia/Kathmandu': 'Nepal Standard Time',
	'Asia/Katmandu': 'Nepal Standard Time',
	'Asia/Khandyga': 'Yakutsk Standard Time',
	'Asia/Kolkata': 'India Standard Time',
	'Asia/Krasnoyarsk': 'North Asia Standard Time',
	'Asia/Kuala_Lumpur': 'Singapore Standard Time',
	'Asia/Kuching': 'Singapore Standard Time',
	'Asia/Kuwait': 'Arab Standard Time',
	'Asia/Macao': 'China Standard Time',
	'Asia/Macau': 'China Standard Time',
	'Asia/Magadan': 'Magadan Standard Time',
	'Asia/Makassar': 'Singapore Standard Time',
	'Asia/Manila': 'Singapore Standard Time',
	'Asia/Muscat': 'Arabian Standard Time',
	'Asia/Nicosia': 'GTB Standard Time',
	'Asia/Novokuznetsk': 'North Asia Standard Time',
	'Asia/Novosibirsk': 'N. Central Asia Standard Time',
	'Asia/Omsk': 'Omsk Standard Time',
	'Asia/Oral': 'West Asia Standard Time',
	'Asia/Phnom_Penh': 'SE Asia Standard Time',
	'Asia/Pontianak': 'SE Asia Standard Time',
	'Asia/Pyongyang': 'North Korea Standard Time',
	'Asia/Qatar': 'Arab Standard Time',
	'Asia/Qostanay': 'Central Asia Standard Time',
	'Asia/Qyzylorda': 'Qyzylorda Standard Time',
	'Asia/Rangoon': 'Myanmar Standard Time',
	'Asia/Riyadh': 'Arab Standard Time',
	'Asia/Saigon': 'SE Asia Standard Time',
	'Asia/Sakhalin': 'Sakhalin Standard Time',
	'Asia/Samarkand': 'West Asia Standard Time',
	'Asia/Seoul': 'Korea Standard Time',
	'Asia/Shanghai': 'China Standard Time',
	'Asia/Singapore': 'Singapore Standard Time',
	'Asia/Srednekolymsk': 'Russia Time Zone 10',
	'Asia/Taipei': 'Taipei Standard Time',
	'Asia/Tashkent': 'West Asia Standard Time',
	'Asia/Tbilisi': 'Georgian Standard Time',
	'Asia/Tehran': 'Iran Standard Time',
	'Asia/Tel_Aviv': 'Israel Standard Time',
	'Asia/Thimbu': 'Bangladesh Standard Time',
	'Asia/Thimphu': 'Bangladesh Standard Time',
	'Asia/Tokyo': 'Tokyo Standard Time',
	'Asia/Tomsk': 'Tomsk Standard Time',
	'Asia/Ujung_Pandang': 'Singapore Standard Time',
	'Asia/Ulaanbaatar': 'Ulaanbaatar Standard Time',
	'Asia/Ulan_Bator': 'Ulaanbaatar Standard Time',
	'Asia/Urumqi': 'Central Asia Standard Time',
	'Asia/Ust-Nera': 'Vladivostok Standard Time',
	'Asia/Vientiane': 'SE Asia Standard Time',
	'Asia/Vladivostok': 'Vladivostok Standard Time',
	'Asia/Yakutsk': 'Yakutsk Standard Time',
	'Asia/Yangon': 'Myanmar Standard Time',
	'Asia/Yekaterinburg': 'Ekaterinburg Standard Time',
	'Asia/Yerevan': 'Caucasus Standard Time',
	'Atlantic/Azores': 'Azores Standard Time',
	'Atlantic/Bermuda': 'Atlantic Standard Time',
	'Atlantic/Canary': 'GMT Standard Time',
	'Atlantic/Cape_Verde': 'Cape Verde Standard Time',
	'Atlantic/Faeroe': 'GMT Standard Time',
	'Atlantic/Faroe': 'GMT Standard Time',
	'Atlantic/Jan_Mayen': 'W. Europe Standard Time',
	'Atlantic/Madeira': 'GMT Standard Time',
	'Atlantic/Reykjavik': 'Greenwich Standard Time',
	'Atlantic/South_Georgia': 'UTC-02',
	'Atlantic/St_Helena': 'Greenwich Standard Time',
	'Atlantic/Stanley': 'SA Eastern Standard Time',
	'Australia/ACT': 'AUS Eastern Standard Time',
	'Australia/Adelaide': 'Cen. Australia Standard Time',
	'Australia/Brisbane': 'E. Australia Standard Time',
	'Australia/Broken_Hill': 'Cen. Australia Standard Time',
	'Australia/Canberra': 'AUS Eastern Standard Time',
	'Australia/Currie': 'Tasmania Standard Time',
	'Australia/Darwin': 'AUS Central Standard Time',
	'Australia/Eucla': 'Aus Central W. Standard Time',
	'Australia/Hobart': 'Tasmania Standard Time',
	'Australia/LHI': 'Lord Howe Standard Time',
	'Australia/Lindeman': 'E. Australia Standard Time',
	'Australia/Lord_Howe': 'Lord Howe Standard Time',
	'Australia/Melbourne': 'AUS Eastern Standard Time',
	'Australia/North': 'AUS Central Standard Time',
	'Australia/NSW': 'AUS Eastern Standard Time',
	'Australia/Perth': 'W. Australia Standard Time',
	'Australia/Queensland': 'E. Australia Standard Time',
	'Australia/South': 'Cen. Australia Standard Time',
	'Australia/Sydney': 'AUS Eastern Standard Time',
	'Australia/Tasmania': 'Tasmania Standard Time',
	'Australia/Victoria': 'AUS Eastern Standard Time',
	'Australia/West': 'W. Australia Standard Time',
	'Australia/Yancowinna': 'Cen. Australia Standard Time',
	'Brazil/Acre': 'SA Pacific Standard Time',
	'Brazil/DeNoronha': 'UTC-02',
	'Brazil/East': 'E. South America Standard Time',
	'Brazil/West': 'SA Western Standard Time',
	'Canada/Atlantic': 'Atlantic Standard Time',
	'Canada/Central': 'Central Standard Time',
	'Canada/Eastern': 'Eastern Standard Time',
	'Canada/Mountain': 'Mountain Standard Time',
	'Canada/Newfoundland': 'Newfoundland Standard Time',
	'Canada/Pacific': 'Pacific Standard Time',
	'Canada/Saskatchewan': 'Canada Central Standard Time',
	'Canada/Yukon': 'Yukon Standard Time',
	'Chile/Continental': 'Pacific SA Standard Time',
	'Chile/EasterIsland': 'Easter Island Standard Time',
	'CST6CDT': 'Central Standard Time',
	'Cuba': 'Cuba Standard Time',
	'Egypt': 'Egypt Standard Time',
	'Eire': 'GMT Standard Time',
	'EST5EDT': 'Eastern Standard Time',
	'Etc/GMT': 'UTC',
	'Etc/GMT+0': 'UTC',
	'Etc/GMT+1': 'Cape Verde Standard Time',
	'Etc/GMT+10': 'Hawaiian Standard Time',
	'Etc/GMT+11': 'UTC-11',
	'Etc/GMT+12': 'Dateline Standard Time',
	'Etc/GMT+2': 'UTC-02',
	'Etc/GMT+3': 'SA Eastern Standard Time',
	'Etc/GMT+4': 'SA Western Standard Time',
	'Etc/GMT+5': 'SA Pacific Standard Time',
	'Etc/GMT+6': 'Central America Standard Time',
	'Etc/GMT+7': 'US Mountain Standard Time',
	'Etc/GMT+8': 'UTC-08',
	'Etc/GMT+9': 'UTC-09',
	'Etc/GMT-0': 'UTC',
	'Etc/GMT-1': 'W. Central Africa Standard Time',
	'Etc/GMT-10': 'West Pacific Standard Time',
	'Etc/GMT-11': 'Central Pacific Standard Time',
	'Etc/GMT-12': 'UTC+12',
	'Etc/GMT-13': 'UTC+13',
	'Etc/GMT-14': 'Line Islands Standard Time',
	'Etc/GMT-2': 'South Africa Standard Time',
	'Etc/GMT-3': 'E. Africa Standard Time',
	'Etc/GMT-4': 'Arabian Standard Time',
	'Etc/GMT-5': 'West Asia Standard Time',
	'Etc/GMT-6': 'Central Asia Standard Time',
	'Etc/GMT-7': 'SE Asia Standard Time',
	'Etc/GMT-8': 'Singapore Standard Time',
	'Etc/GMT-9': 'Tokyo Standard Time',
	'Etc/GMT0': 'UTC',
	'Etc/Greenwich': 'UTC',
	'Etc/UCT': 'UTC',
	'Etc/Universal': 'UTC',
	'Etc/UTC': 'UTC',
	'Etc/Zulu': 'UTC',
	'Europe/Amsterdam': 'W. Europe Standard Time',
	'Europe/Andorra': 'W. Europe Standard Time',
	'Europe/Astrakhan': 'Astrakhan Standard Time',
	'Europe/Athens': 'GTB Standard Time',
	'Europe/Belfast': 'GMT Standard Time',
	'Europe/Belgrade': 'Central Europe Standard Time',
	'Europe/Berlin': 'W. Europe Standard Time',
	'Europe/Bratislava': 'Central Europe Standard Time',
	'Europe/Brussels': 'Romance Standard Time',
	'Europe/Bucharest': 'GTB Standard Time',
	'Europe/Budapest': 'Central Europe Standard Time',
	'Europe/Busingen': 'W. Europe Standard Time',
	'Europe/Chisinau': 'E. Europe Standard Time',
	'Europe/Copenhagen': 'Romance Standard Time',
	'Europe/Dublin': 'GMT Standard Time',
	'Europe/Gibraltar': 'W. Europe Standard Time',
	'Europe/Guernsey': 'GMT Standard Time',
	'Europe/Helsinki': 'FLE Standard Time',
	'Europe/Isle_of_Man': 'GMT Standard Time',
	'Europe/Istanbul': 'Turkey Standard Time',
	'Europe/Jersey': 'GMT Standard Time',
	'Europe/Kaliningrad': 'Kaliningrad Standard Time',
	'Europe/Kiev': 'FLE Standard Time',
	'Europe/Kirov': 'Russian Standard Time',
	'Europe/Kyiv': 'FLE Standard Time',
	'Europe/Lisbon': 'GMT Standard Time',
	'Europe/Ljubljana': 'Central Europe Standard Time',
	'Europe/London': 'GMT Standard Time',
	'Europe/Luxembourg': 'W. Europe Standard Time',
	'Europe/Madrid': 'Romance Standard Time',
	'Europe/Malta': 'W. Europe Standard Time',
	'Europe/Mariehamn': 'FLE Standard Time',
	'Europe/Minsk': 'Belarus Standard Time',
	'Europe/Monaco': 'W. Europe Standard Time',
	'Europe/Moscow': 'Russian Standard Time',
	'Europe/Nicosia': 'GTB Standard Time',
	'Europe/Oslo': 'W. Europe Standard Time',
	'Europe/Paris': 'Romance Standard Time',
	'Europe/Podgorica': 'Central Europe Standard Time',
	'Europe/Prague': 'Central Europe Standard Time',
	'Europe/Riga': 'FLE Standard Time',
	'Europe/Rome': 'W. Europe Standard Time',
	'Europe/Samara': 'Russia Time Zone 3',
	'Europe/San_Marino': 'W. Europe Standard Time',
	'Europe/Sarajevo': 'Central European Standard Time',
	'Europe/Saratov': 'Saratov Standard Time',
	'Europe/Simferopol': 'Russian Standard Time',
	'Europe/Skopje': 'Central European Standard Time',
	'Europe/Sofia': 'FLE Standard Time',
	'Europe/Stockholm': 'W. Europe Standard Time',
	'Europe/Tallinn': 'FLE Standard Time',
	'Europe/Tirane': 'Central Europe Standard Time',
	'Europe/Tiraspol': 'E. Europe Standard Time',
	'Europe/Ulyanovsk': 'Astrakhan Standard Time',
	'Europe/Uzhgorod': 'FLE Standard Time',
	'Europe/Vaduz': 'W. Europe Standard Time',
	'Europe/Vatican': 'W. Europe Standard Time',
	'Europe/Vienna': 'W. Europe Standard Time',
	'Europe/Vilnius': 'FLE Standard Time',
	'Europe/Volgograd': 'Volgograd Standard Time',
	'Europe/Warsaw': 'Central European Standard Time',
	'Europe/Zagreb': 'Central European Standard Time',
	'Europe/Zaporozhye': 'FLE Standard Time',
	'Europe/Zurich': 'W. Europe Standard Time',
	'GB': 'GMT Standard Time',
	'GB-Eire': 'GMT Standard Time',
	'GMT': 'UTC',
	'GMT+0': 'UTC',
	'GMT-0': 'UTC',
	'GMT0': 'UTC',
	'Greenwich': 'UTC',
	'Hongkong': 'China Standard Time',
	'Iceland': 'Greenwich Standard Time',
	'Indian/Antananarivo': 'E. Africa Standard Time',
	'Indian/Chagos': 'Central Asia Standard Time',
	'Indian/Christmas': 'SE Asia Standard Time',
	'Indian/Cocos': 'Myanmar Standard Time',
	'Indian/Comoro': 'E. Africa Standard Time',
	'Indian/Kerguelen': 'West Asia Standard Time',
	'Indian/Mahe': 'Mauritius Standard Time',
	'Indian/Maldives': 'West Asia Standard Time',
	'Indian/Mauritius': 'Mauritius Standard Time',
	'Indian/Mayotte': 'E. Africa Standard Time',
	'Indian/Reunion': 'Mauritius Standard Time',
	'Iran': 'Iran Standard Time',
	'Israel': 'Israel Standard Time',
	'Jamaica': 'SA Pacific Standard Time',
	'Japan': 'Tokyo Standard Time',
	'Kwajalein': 'UTC+12',
	'Libya': 'Libya Standard Time',
	'Mexico/BajaNorte': 'Pacific Standard Time (Mexico)',
	'Mexico/BajaSur': 'Mountain Standard Time (Mexico)',
	'Mexico/General': 'Central Standard Time (Mexico)',
	'MST7MDT': 'Mountain Standard Time',
	'Navajo': 'Mountain Standard Time',
	'NZ': 'New Zealand Standard Time',
	'NZ-CHAT': 'Chatham Islands Standard Time',
	'Pacific/Apia': 'Samoa Standard Time',
	'Pacific/Auckland': 'New Zealand Standard Time',
	'Pacific/Bougainville': 'Bougainville Standard Time',
	'Pacific/Chatham': 'Chatham Islands Standard Time',
	'Pacific/Chuuk': 'West Pacific Standard Time',
	'Pacific/Easter': 'Easter Island Standard Time',
	'Pacific/Efate': 'Central Pacific Standard Time',
	'Pacific/Enderbury': 'UTC+13',
	'Pacific/Fakaofo': 'UTC+13',
	'Pacific/Fiji': 'Fiji Standard Time',
	'Pacific/Funafuti': 'UTC+12',
	'Pacific/Galapagos': 'Central America Standard Time',
	'Pacific/Gambier': 'UTC-09',
	'Pacific/Guadalcanal': 'Central Pacific Standard Time',
	'Pacific/Guam': 'West Pacific Standard Time',
	'Pacific/Honolulu': 'Hawaiian Standard Time',
	'Pacific/Johnston': 'Hawaiian Standard Time',
	'Pacific/Kanton': 'UTC+13',
	'Pacific/Kiritimati': 'Line Islands Standard Time',
	'Pacific/Kosrae': 'Central Pacific Standard Time',
	'Pacific/Kwajalein': 'UTC+12',
	'Pacific/Majuro': 'UTC+12',
	'Pacific/Marquesas': 'Marquesas Standard Time',
	'Pacific/Midway': 'UTC-11',
	'Pacific/Nauru': 'UTC+12',
	'Pacific/Niue': 'UTC-11',
	'Pacific/Norfolk': 'Norfolk Standard Time',
	'Pacific/Noumea': 'Central Pacific Standard Time',
	'Pacific/Pago_Pago': 'UTC-11',
	'Pacific/Palau': 'Tokyo Standard Time',
	'Pacific/Pitcairn': 'UTC-08',
	'Pacific/Pohnpei': 'Central Pacific Standard Time',
	'Pacific/Ponape': 'Central Pacific Standard Time',
	'Pacific/Port_Moresby': 'West Pacific Standard Time',
	'Pacific/Rarotonga': 'Hawaiian Standard Time',
	'Pacific/Saipan': 'West Pacific Standard Time',
	'Pacific/Samoa': 'UTC-11',
	'Pacific/Tahiti': 'Hawaiian Standard Time',
	'Pacific/Tarawa': 'UTC+12',
	'Pacific/Tongatapu': 'Tonga Standard Time',
	'Pacific/Truk': 'West Pacific Standard Time',
	'Pacific/Wake': 'UTC+12',
	'Pacific/Wallis': 'UTC+12',
	'Pacific/Yap': 'West Pacific Standard Time',
	'Poland': 'Central European Standard Time',
	'Portugal': 'GMT Standard Time',
	'PRC': 'China Standard Time',
	'PST8PDT': 'Pacific Standard Time',
	'ROC': 'Taipei Standard Time',
	'ROK': 'Korea Standard Time',
	'Singapore': 'Singapore Standard Time',
	'Turkey': 'Turkey Standard Time',
	'UCT': 'UTC',
	'Universal': 'UTC',
	'US/Alaska': 'Alaskan Standard Time',
	'US/Aleutian': 'Aleutian Standard Time',
	'US/Arizona': 'US Mountain Standard Time',
	'US/Central': 'Central Standard Time',
	'US/East-Indiana': 'US Eastern Standard Time',
	'US/Eastern': 'Eastern Standard Time',
	'US/Hawaii': 'Hawaiian Standard Time',
	'US/Indiana-Starke': 'Central Standard Time',
	'US/Michigan': 'Eastern Standard Time',
	'US/Mountain': 'Mountain Standard Time',
	'US/Pacific': 'Pacific Standard Time',
	'US/Samoa': 'UTC-11',
	'UTC': 'UTC',
	'W-SU': 'Russian Standard Time',
	'Zulu': 'UTC'
};

/* Build time: 2019-09-09 11:29:41Z Build by invoking python utilities/dst.py generate */
jstz.olson.dst_rules = {
	"years": [
		2008,
		2009,
		2010,
		2011,
		2012,
		2013,
		2014
	],
	"zones": [
		{
			"name": "Africa/Cairo",
			"rules": [
				{
					"e": 1219957200000,
					"s": 1209074400000
				},
				{
					"e": 1250802000000,
					"s": 1240524000000
				},
				{
					"e": 1285880400000,
					"s": 1284069600000
				},
				false,
				false,
				false,
				{
					"e": 1411678800000,
					"s": 1406844000000
				}
			]
		},
		{
			"name": "America/Asuncion",
			"rules": [
				{
					"e": 1205031600000,
					"s": 1224388800000
				},
				{
					"e": 1236481200000,
					"s": 1255838400000
				},
				{
					"e": 1270954800000,
					"s": 1286078400000
				},
				{
					"e": 1302404400000,
					"s": 1317528000000
				},
				{
					"e": 1333854000000,
					"s": 1349582400000
				},
				{
					"e": 1364094000000,
					"s": 1381032000000
				},
				{
					"e": 1395543600000,
					"s": 1412481600000
				}
			]
		},
		{
			"name": "America/Campo_Grande",
			"rules": [
				{
					"e": 1203217200000,
					"s": 1224388800000
				},
				{
					"e": 1234666800000,
					"s": 1255838400000
				},
				{
					"e": 1266721200000,
					"s": 1287288000000
				},
				{
					"e": 1298170800000,
					"s": 1318737600000
				},
				{
					"e": 1330225200000,
					"s": 1350792000000
				},
				{
					"e": 1361070000000,
					"s": 1382241600000
				},
				{
					"e": 1392519600000,
					"s": 1413691200000
				}
			]
		},
		{
			"name": "America/Goose_Bay",
			"rules": [
				{
					"e": 1225594860000,
					"s": 1205035260000
				},
				{
					"e": 1257044460000,
					"s": 1236484860000
				},
				{
					"e": 1289098860000,
					"s": 1268539260000
				},
				{
					"e": 1320555600000,
					"s": 1299988860000
				},
				{
					"e": 1352005200000,
					"s": 1331445600000
				},
				{
					"e": 1383454800000,
					"s": 1362895200000
				},
				{
					"e": 1414904400000,
					"s": 1394344800000
				}
			]
		},
		{
			"name": "America/Havana",
			"rules": [
				{
					"e": 1224997200000,
					"s": 1205643600000
				},
				{
					"e": 1256446800000,
					"s": 1236488400000
				},
				{
					"e": 1288501200000,
					"s": 1268542800000
				},
				{
					"e": 1321160400000,
					"s": 1300597200000
				},
				{
					"e": 1352005200000,
					"s": 1333256400000
				},
				{
					"e": 1383454800000,
					"s": 1362891600000
				},
				{
					"e": 1414904400000,
					"s": 1394341200000
				}
			]
		},
		{
			"name": "America/Mazatlan",
			"rules": [
				{
					"e": 1225008000000,
					"s": 1207472400000
				},
				{
					"e": 1256457600000,
					"s": 1238922000000
				},
				{
					"e": 1288512000000,
					"s": 1270371600000
				},
				{
					"e": 1319961600000,
					"s": 1301821200000
				},
				{
					"e": 1351411200000,
					"s": 1333270800000
				},
				{
					"e": 1382860800000,
					"s": 1365325200000
				},
				{
					"e": 1414310400000,
					"s": 1396774800000
				}
			]
		},
		{
			"name": "America/Mexico_City",
			"rules": [
				{
					"e": 1225004400000,
					"s": 1207468800000
				},
				{
					"e": 1256454000000,
					"s": 1238918400000
				},
				{
					"e": 1288508400000,
					"s": 1270368000000
				},
				{
					"e": 1319958000000,
					"s": 1301817600000
				},
				{
					"e": 1351407600000,
					"s": 1333267200000
				},
				{
					"e": 1382857200000,
					"s": 1365321600000
				},
				{
					"e": 1414306800000,
					"s": 1396771200000
				}
			]
		},
		{
			"name": "America/Miquelon",
			"rules": [
				{
					"e": 1225598400000,
					"s": 1205038800000
				},
				{
					"e": 1257048000000,
					"s": 1236488400000
				},
				{
					"e": 1289102400000,
					"s": 1268542800000
				},
				{
					"e": 1320552000000,
					"s": 1299992400000
				},
				{
					"e": 1352001600000,
					"s": 1331442000000
				},
				{
					"e": 1383451200000,
					"s": 1362891600000
				},
				{
					"e": 1414900800000,
					"s": 1394341200000
				}
			]
		},
		{
			"name": "America/Santa_Isabel",
			"rules": [
				{
					"e": 1225011600000,
					"s": 1207476000000
				},
				{
					"e": 1256461200000,
					"s": 1238925600000
				},
				{
					"e": 1289120400000,
					"s": 1268560800000
				},
				{
					"e": 1320570000000,
					"s": 1300010400000
				},
				{
					"e": 1352019600000,
					"s": 1331460000000
				},
				{
					"e": 1383469200000,
					"s": 1362909600000
				},
				{
					"e": 1414918800000,
					"s": 1394359200000
				}
			]
		},
		{
			"name": "America/Santiago",
			"rules": [
				{
					"e": 1206846000000,
					"s": 1223784000000
				},
				{
					"e": 1237086000000,
					"s": 1255233600000
				},
				{
					"e": 1270350000000,
					"s": 1286683200000
				},
				{
					"e": 1304823600000,
					"s": 1313899200000
				},
				{
					"e": 1335668400000,
					"s": 1346558400000
				},
				{
					"e": 1367118000000,
					"s": 1378612800000
				},
				{
					"e": 1398567600000,
					"s": 1410062400000
				}
			]
		},
		{
			"name": "America/Sao_Paulo",
			"rules": [
				{
					"e": 1203213600000,
					"s": 1224385200000
				},
				{
					"e": 1234663200000,
					"s": 1255834800000
				},
				{
					"e": 1266717600000,
					"s": 1287284400000
				},
				{
					"e": 1298167200000,
					"s": 1318734000000
				},
				{
					"e": 1330221600000,
					"s": 1350788400000
				},
				{
					"e": 1361066400000,
					"s": 1382238000000
				},
				{
					"e": 1392516000000,
					"s": 1413687600000
				}
			]
		},
		{
			"name": "Asia/Amman",
			"rules": [
				{
					"e": 1225404000000,
					"s": 1206655200000
				},
				{
					"e": 1256853600000,
					"s": 1238104800000
				},
				{
					"e": 1288303200000,
					"s": 1269554400000
				},
				{
					"e": 1319752800000,
					"s": 1301608800000
				},
				false,
				false,
				{
					"e": 1414706400000,
					"s": 1395957600000
				}
			]
		},
		{
			"name": "Asia/Damascus",
			"rules": [
				{
					"e": 1225486800000,
					"s": 1207260000000
				},
				{
					"e": 1256850000000,
					"s": 1238104800000
				},
				{
					"e": 1288299600000,
					"s": 1270159200000
				},
				{
					"e": 1319749200000,
					"s": 1301608800000
				},
				{
					"e": 1351198800000,
					"s": 1333058400000
				},
				{
					"e": 1382648400000,
					"s": 1364508000000
				},
				{
					"e": 1414702800000,
					"s": 1395957600000
				}
			]
		},
		{
			"name": "Asia/Dubai",
			"rules": [
				false,
				false,
				false,
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Asia/Gaza",
			"rules": [
				{
					"e": 1219957200000,
					"s": 1206655200000
				},
				{
					"e": 1252015200000,
					"s": 1238104800000
				},
				{
					"e": 1281474000000,
					"s": 1269640860000
				},
				{
					"e": 1312146000000,
					"s": 1301608860000
				},
				{
					"e": 1348178400000,
					"s": 1333058400000
				},
				{
					"e": 1380229200000,
					"s": 1364508000000
				},
				{
					"e": 1414098000000,
					"s": 1395957600000
				}
			]
		},
		{
			"name": "Asia/Irkutsk",
			"rules": [
				{
					"e": 1224957600000,
					"s": 1206813600000
				},
				{
					"e": 1256407200000,
					"s": 1238263200000
				},
				{
					"e": 1288461600000,
					"s": 1269712800000
				},
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Asia/Jerusalem",
			"rules": [
				{
					"e": 1223161200000,
					"s": 1206662400000
				},
				{
					"e": 1254006000000,
					"s": 1238112000000
				},
				{
					"e": 1284246000000,
					"s": 1269561600000
				},
				{
					"e": 1317510000000,
					"s": 1301616000000
				},
				{
					"e": 1348354800000,
					"s": 1333065600000
				},
				{
					"e": 1382828400000,
					"s": 1364515200000
				},
				{
					"e": 1414278000000,
					"s": 1395964800000
				}
			]
		},
		{
			"name": "Asia/Kamchatka",
			"rules": [
				{
					"e": 1224943200000,
					"s": 1206799200000
				},
				{
					"e": 1256392800000,
					"s": 1238248800000
				},
				{
					"e": 1288450800000,
					"s": 1269698400000
				},
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Asia/Krasnoyarsk",
			"rules": [
				{
					"e": 1224961200000,
					"s": 1206817200000
				},
				{
					"e": 1256410800000,
					"s": 1238266800000
				},
				{
					"e": 1288465200000,
					"s": 1269716400000
				},
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Asia/Omsk",
			"rules": [
				{
					"e": 1224964800000,
					"s": 1206820800000
				},
				{
					"e": 1256414400000,
					"s": 1238270400000
				},
				{
					"e": 1288468800000,
					"s": 1269720000000
				},
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Asia/Vladivostok",
			"rules": [
				{
					"e": 1224950400000,
					"s": 1206806400000
				},
				{
					"e": 1256400000000,
					"s": 1238256000000
				},
				{
					"e": 1288454400000,
					"s": 1269705600000
				},
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Asia/Yakutsk",
			"rules": [
				{
					"e": 1224954000000,
					"s": 1206810000000
				},
				{
					"e": 1256403600000,
					"s": 1238259600000
				},
				{
					"e": 1288458000000,
					"s": 1269709200000
				},
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Asia/Yekaterinburg",
			"rules": [
				{
					"e": 1224968400000,
					"s": 1206824400000
				},
				{
					"e": 1256418000000,
					"s": 1238274000000
				},
				{
					"e": 1288472400000,
					"s": 1269723600000
				},
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Asia/Yerevan",
			"rules": [
				{
					"e": 1224972000000,
					"s": 1206828000000
				},
				{
					"e": 1256421600000,
					"s": 1238277600000
				},
				{
					"e": 1288476000000,
					"s": 1269727200000
				},
				{
					"e": 1319925600000,
					"s": 1301176800000
				},
				false,
				false,
				false
			]
		},
		{
			"name": "Australia/Lord_Howe",
			"rules": [
				{
					"e": 1207407600000,
					"s": 1223134200000
				},
				{
					"e": 1238857200000,
					"s": 1254583800000
				},
				{
					"e": 1270306800000,
					"s": 1286033400000
				},
				{
					"e": 1301756400000,
					"s": 1317483000000
				},
				{
					"e": 1333206000000,
					"s": 1349537400000
				},
				{
					"e": 1365260400000,
					"s": 1380987000000
				},
				{
					"e": 1396710000000,
					"s": 1412436600000
				}
			]
		},
		{
			"name": "Australia/Perth",
			"rules": [
				{
					"e": 1206813600000,
					"s": 1224957600000
				},
				false,
				false,
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Europe/Helsinki",
			"rules": [
				{
					"e": 1224982800000,
					"s": 1206838800000
				},
				{
					"e": 1256432400000,
					"s": 1238288400000
				},
				{
					"e": 1288486800000,
					"s": 1269738000000
				},
				{
					"e": 1319936400000,
					"s": 1301187600000
				},
				{
					"e": 1351386000000,
					"s": 1332637200000
				},
				{
					"e": 1382835600000,
					"s": 1364691600000
				},
				{
					"e": 1414285200000,
					"s": 1396141200000
				}
			]
		},
		{
			"name": "Europe/Minsk",
			"rules": [
				{
					"e": 1224979200000,
					"s": 1206835200000
				},
				{
					"e": 1256428800000,
					"s": 1238284800000
				},
				{
					"e": 1288483200000,
					"s": 1269734400000
				},
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Europe/Moscow",
			"rules": [
				{
					"e": 1224975600000,
					"s": 1206831600000
				},
				{
					"e": 1256425200000,
					"s": 1238281200000
				},
				{
					"e": 1288479600000,
					"s": 1269730800000
				},
				false,
				false,
				false,
				false
			]
		},
		{
			"name": "Pacific/Apia",
			"rules": [
				false,
				false,
				false,
				{
					"e": 1301752800000,
					"s": 1316872800000
				},
				{
					"e": 1333202400000,
					"s": 1348927200000
				},
				{
					"e": 1365256800000,
					"s": 1380376800000
				},
				{
					"e": 1396706400000,
					"s": 1411826400000
				}
			]
		},
		{
			"name": "Pacific/Fiji",
			"rules": [
				false,
				false,
				{
					"e": 1269698400000,
					"s": 1287842400000
				},
				{
					"e": 1327154400000,
					"s": 1319292000000
				},
				{
					"e": 1358604000000,
					"s": 1350741600000
				},
				{
					"e": 1390050000000,
					"s": 1382796000000
				},
				{
					"e": 1421503200000,
					"s": 1414850400000
				}
			]
		},
		{
			"name": "Europe/London",
			"rules": [
				{
					"e": 1224982800000,
					"s": 1206838800000
				},
				{
					"e": 1256432400000,
					"s": 1238288400000
				},
				{
					"e": 1288486800000,
					"s": 1269738000000
				},
				{
					"e": 1319936400000,
					"s": 1301187600000
				},
				{
					"e": 1351386000000,
					"s": 1332637200000
				},
				{
					"e": 1382835600000,
					"s": 1364691600000
				},
				{
					"e": 1414285200000,
					"s": 1396141200000
				}
			]
		},
		{
			"name": "Africa/Windhoek",
			"rules": [
				{
					"e": 1220749200000,
					"s": 1207440000000
				},
				{
					"e": 1252198800000,
					"s": 1238889600000
				},
				{
					"e": 1283648400000,
					"s": 1270339200000
				},
				{
					"e": 1315098000000,
					"s": 1301788800000
				},
				{
					"e": 1346547600000,
					"s": 1333238400000
				},
				{
					"e": 1377997200000,
					"s": 1365292800000
				},
				{
					"e": 1410051600000,
					"s": 1396742400000
				}
			]
		}
	]
};
if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
	module.exports = jstz;
} else if ((typeof define !== 'undefined' && define !== null) && (define.amd != null)) {
	define([], function() {
		return jstz;
	});
} else {
	if (typeof root === 'undefined') {
		window.jstz = jstz;
	} else {
		root.jstz = jstz;
	}
}
}() );
// CMS7 register script. 
if ( window.register ) {
	window.register( "j/timezone" );
}
